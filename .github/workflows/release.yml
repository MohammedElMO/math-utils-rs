name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

permissions:
  contents: write
  id-token: write  # for npm --provenance

jobs:
  build-and-publish-binaries:
    name: Build & publish platform packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          check-latest: true
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install JS dependencies
        run: npm ci

      - name: Build bindings for this platform
        run: npx -p @napi-rs/cli@latest napi build --platform --release --output-dir ./npm

      - name: Show build output
        run: ls -R ./npm

      # Skipping per-platform publish to avoid errors
      #- name: Publish platform packages to npm
      #  run: node publish-npm.js
      #  env:
      #    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload npm artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: npm-${{ matrix.os }}
          path: ./npm/**

  publish-main:
    name: Publish aggregator package
    needs: build-and-publish-binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          registry-url: 'https://registry.npmjs.org'
          check-latest: true

      - name: Download platform artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "npm-*"
          merge-multiple: true
          path: ./npm

      - name: Prepublish main package (skip GitHub release)
        run: npx -p @napi-rs/cli@latest napi prepublish -t npm --skip-gh-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Publish main package to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance

