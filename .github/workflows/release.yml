name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

permissions:
  contents: write
  id-token: write  # for npm --provenance

jobs:
  build-and-publish-binaries:
    name: Build & publish platform packages
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [22]

    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              ${{ runner.os }}-cargo-



      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          check-latest: true
          registry-url: 'https://registry.npmjs.org'
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Install JS deps
        run: npm ci

      - name: Build bindings for this platform
        run: npx -p @napi-rs/cli@latest napi build --platform --release --output-dir ./npm


      - name: Show build output
        run: ls -R ./npm

      - name: Publish platform package(s)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: |
          shopt -s nullglob
          for pkg in ./npm/*; do
            if [ -f "$pkg/package.json" ]; then
              echo "Publishing $pkg"
              npm publish "$pkg" --access public --provenance
            fi
          done

      - name: Upload npm dir (optional for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: npm-${{ matrix.os }}
          path: ./npm/**

  publish-main:
    name: Publish aggregator package
    needs: build-and-publish-binaries

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/cache@v4
        with:

          path: |
            ~/.cargo/registry
            ~/.cargo/git
              target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
            pattern: "npm-*"
            merge-multiple: true
            path: ./npm


      # This updates optionalDependencies + binary metadata for the main package
      - name: Prepublish (prepare main package)
        run:  npx -p @napi-rs/cli@latest napi prepublish -t npm
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Publish main package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance

